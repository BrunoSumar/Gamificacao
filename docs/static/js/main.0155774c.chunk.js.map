{"version":3,"sources":["pages/Admin/index.js","pages/Login/components/GoogleLoginButton/styles.js","pages/Login/components/GoogleLoginButton/index.js","pages/Login/components/GoogleProvider/index.js","pages/Login/components/LogoutButton/index.js","pages/Login/index.js","pages/Login/styles.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","react_default","a","createElement","Fragment","GoogleButtonCustom","styled","button","_templateObject","Object","taggedTemplateLiteral","GoogleLoginButton","_ref","successPath","setLogged","setToken","setLoading","onSuccess","_ref2","asyncToGenerator","regenerator_default","mark","_callee","token","response","jwt","wrap","_context","prev","next","fetch","concat","process","REACT_APP_SERVER_URL","method","body","JSON","stringify","access_token","sent","ok","json","localStorage","setItem","t0","alert","stop","_x","apply","this","arguments","login","useGoogleLogin","onError","error","scope","style","border","onClick","GoogleProvider","props","index_esm","clientId","children","LogoutButton","removeItem","LoginOptions","footer","styles_templateObject","isLogged","isLoading","_useState","useState","_useState2","slicedToArray","copySuccess","setCopySuccess","text-align","aria-busy","e","textField","document","innerText","target","appendChild","select","execCommand","remove","components_LogoutButton","components_GoogleProvider","REACT_APP_CLIENT_ID","components_GoogleLoginButton","_useState3","getItem","_useState4","_useState5","_useState6","_useState7","_useState8","className","Login_LoginOptions","dist","to","href","App","data-theme","react_router_dist","path","element","Login","Admin","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.0155774c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  return (\n    <>\n      Login como administrador\n      Nome:\n      Senha:\n    </>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components'\n\nexport const GoogleButtonCustom = styled.button`\n    // width: 300px;\n    // height: 50px;\n    // border-radius: 10px;\n    // background-color: rgba(10,20,30,0.3);\n    // :hover{\n    //     cursor: pointer;\n    //     background-color: rgba(10,20,30,0.7);\n    // }\n`\n","import { useGoogleLogin } from \"@react-oauth/google\";\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleButtonCustom } from \"./styles\";\n\nconst GoogleLoginButton = ({ successPath, setLogged, setToken, setLoading }) => {\n\n  const onSuccess = async (token) => {\n    try {\n      let response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}${successPath}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            access_token: token.access_token,\n          }),\n        }\n      );\n\n      if (response.ok) {\n        let jwt = await response.json();\n        localStorage.setItem(\"app_jwt\", jwt.token);\n        setToken(jwt.token);\n        setLogged(jwt.token);\n        setLoading(false);\n      }\n      else throw 'error'\n    } catch (error) {\n      alert(\"Error server response!!\");\n    }\n  };\n\n  const onError = (error) => alert(\"Error OnError!!\");\n\n  // const scope = \"profile email https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.rosters.readonly https://www.googleapis.com/auth/classroom.profile.emails\"; //TODO Avaliar colocar isso como env\n  const scope = \"profile email https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.rosters.readonly\"; //TODO Avaliar colocar isso como env\n\n  const login = useGoogleLogin({\n    onSuccess: onSuccess,\n    onError: onError,\n    scope: scope,\n  });\n\n  return (\n    <GoogleButtonCustom\n      style={{ border: \"1px red\" }}\n      onClick={() => { setLoading(true); login(); }}\n    >\n      Sign in with Google\n    </GoogleButtonCustom>\n  );\n};\n\nexport default GoogleLoginButton;\n","import { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport React from \"react\";\n\nconst GoogleProvider = (props) => {\n  return (\n    <GoogleOAuthProvider clientId={props.clientId}>\n      {props.children}\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default GoogleProvider;\n","import React  from \"react\";\n\nconst LogoutButton = ({ setLogged }) => {\n\n  const logout = () => {\n    localStorage.removeItem('app_jwt');\n    setLogged(false);\n  };\n\n  return (\n    <button onClick={logout}> Logout </button>\n  )\n};\n\nexport default LogoutButton;\n","import GoogleLoginButton from \"./components/GoogleLoginButton\";\nimport GoogleProvider from \"./components/GoogleProvider\";\nimport LogoutButton from \"./components/LogoutButton\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { footerCustom } from \"./styles\";\n\nconst LoginOptions = ({ isLogged, setLogged, token, setToken, isLoading, setLoading }) => {\n  const [ copySuccess, setCopySuccess ] = useState(false);\n\n  const copyToClipboard = (e) => {\n    const textField = document.createElement('textarea');\n    textField.innerText = e.target.innerText;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n    setCopySuccess(true);\n  };\n\n  if( isLoading ) {\n    return (\n        <><br/><br/><br/><h1 style={{ 'text-align': 'center' }} aria-busy='true'></h1></>\n    );\n\n  }\n\n  if( isLogged ){\n    return (\n      <>\n        <h3>Logoado com sucesso:</h3>\n        <article onClick={ copyToClipboard }>{ token }</article>\n        <p style={{ 'text-align': 'center' }}><ins>{ copySuccess ? 'Texto copiado' : <br/> } </ins></p>\n        <LogoutButton setLogged={setLogged}/>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h3>Login:</h3>\n      <GoogleProvider clientId={process.env.REACT_APP_CLIENT_ID}>\n        <label>Login como aluno: </label>\n        <GoogleLoginButton successPath={'api/login/aluno'} setToken={setToken} setLogged={setLogged} setLoading={setLoading}/>\n        <label>Login como professor: </label>\n        <GoogleLoginButton successPath={'api/login/professor'} setToken={setToken} setLogged={setLogged} setLoading={setLoading}/>\n      </GoogleProvider>\n    </>\n  );\n\n}\n\nconst LoginPage = () => {\n  const [ token, setToken ] = useState(localStorage.getItem(\"app_jwt\"));\n  const [ isLogged, setLogged ] = useState(!!token);\n  const [ isLoading, setLoading ] = useState(false);\n\n  return (\n    <main className=\"container\">\n      <br/>\n      <LoginOptions\n        isLogged={isLogged} setLogged={setLogged}\n        isLoading={isLoading} setLoading={setLoading}\n        token={token} setToken={setToken}\n      />\n      <br/>\n      <footerCustom>\n        <Link to=\"admin\">Entrar como administrador</Link> <br/>\n        <a href=\"#\">Veja o projeto no github</a>\n      </footerCustom>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const footerCustom = styled.footer`\n  footer {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 60px; /* altura do rodapé */\n    // background-color: #f5f5f5;\n    background-color: red;\n  }\n`\n","import React from \"react\";\nimport './css/pico.min.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { AdminPage, LoginPage } from './pages'\n\nconst App = () => {\n  return (\n    <Router data-theme=\"dark\">\n      <Routes>\n        <Route path='/' element={<LoginPage/>} />\n        <Route path='/admin' element={<AdminPage/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container flex-center\">\n      <App/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}