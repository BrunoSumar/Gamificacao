{"version":3,"sources":["pages/Admin/index.js","pages/Login/components/GoogleLoginButton/styles.js","pages/Login/components/GoogleLoginButton/index.js","pages/Login/components/GoogleProvider/index.js","pages/Login/components/LogoutButton/index.js","pages/Login/styles.js","pages/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","_useState","useState","_useState2","Object","slicedToArray","user","setUser","_useState3","_useState4","password","setPassword","navigate","useNavigate","handleChange","setter","event","target","value","login","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","payload","response","_yield$response$json","token","wrap","_context","prev","next","preventDefault","console","log","fetch","concat","process","method","body","JSON","stringify","headers","Content-Type","sent","ok","json","localStorage","setItem","t0","error","alert","stop","_x","apply","this","arguments","react_default","createElement","Fragment","type","onChange","onClick","dist","to","GoogleButtonCustom","styled","button","_templateObject","taggedTemplateLiteral","GoogleLoginButton","successPath","setLogged","setToken","setLoading","onSuccess","_ref2","jwt","access_token","useGoogleLogin","onError","scope","style","border","GoogleProvider","props","index_esm","clientId","children","LogoutButton","removeItem","FooterCustom","footer","styles_templateObject","LoginOptions","isLogged","isLoading","copySuccess","setCopySuccess","text-align","aria-busy","textField","document","innerText","appendChild","select","execCommand","remove","components_LogoutButton","components_GoogleProvider","components_GoogleLoginButton","getItem","_useState5","_useState6","_useState7","_useState8","className","Login_LoginOptions","href","App","data-theme","react_router_dist","path","element","Login","Admin","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.d1777025.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const [ user, setUser ] = useState(null);\n  const [ password, setPassword ] = useState(null);\n  const navigate = useNavigate();\n\n  const handleChange = setter => event => setter(event.target.value);\n\n  const login = async e => {\n    e.preventDefault();\n    const payload = { user, password };\n    try {\n      console.log(payload)\n      let response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}api/login/administrador`,\n        {\n          method: \"POST\",\n          body: JSON.stringify(payload),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.ok) {\n        const { token } = await response.json();\n        localStorage.setItem(\"app_jwt\", token);\n        navigate('/');\n      }\n      else throw 'error'\n    } catch (error) {\n      console.error( error );\n      alert(\"Erro ao realizar login como administrador\");\n    }\n  };\n\n  return (\n    <>\n      <br/>\n      <h3>Login como administrador:</h3>\n\n      <article>\n        <form>\n          <label>Nome:</label>\n          <input type=\"text\"     onChange={handleChange(setUser)}/>\n          <label>Senha:</label>\n          <input type=\"password\" onChange={handleChange(setPassword)}/>\n          <br/><br/>\n          <button onClick={login}>Login</button>\n        </form>\n      </article>\n\n      <Link to=\"/\">Volar ao inicio</Link>\n    </>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components'\n\nexport const GoogleButtonCustom = styled.button`\n    // width: 300px;\n    // height: 50px;\n    // border-radius: 10px;\n    // background-color: rgba(10,20,30,0.3);\n    // :hover{\n    //     cursor: pointer;\n    //     background-color: rgba(10,20,30,0.7);\n    // }\n`\n","import { useGoogleLogin } from \"@react-oauth/google\";\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleButtonCustom } from \"./styles\";\n\nconst GoogleLoginButton = ({ successPath, setLogged, setToken, setLoading }) => {\n\n  const onSuccess = async (token) => {\n    try {\n      let response = await fetch(\n        `${process.env.REACT_APP_SERVER_URL}${successPath}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            access_token: token.access_token,\n          }),\n        }\n      );\n      setLoading(false);\n      if( !response.ok )\n        throw 'error';\n\n      let jwt = await response.json();\n      localStorage.setItem(\"app_jwt\", jwt.token);\n      setToken(jwt.token);\n      setLogged(jwt.token);\n    } catch (error) {\n      alert(\"Erro ao realizar login\");\n    }\n  };\n\n  const onError = (error) => alert(\"Falha ao realizar login\");\n\n  // const scope = \"profile email https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.rosters.readonly https://www.googleapis.com/auth/classroom.profile.emails\"; //TODO Avaliar colocar isso como env\n  const scope = \"profile email https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.rosters.readonly\"; //TODO Avaliar colocar isso como env\n\n  const login = useGoogleLogin({\n    onSuccess: onSuccess,\n    onError: onError,\n    scope: scope,\n  });\n\n  return (\n    <GoogleButtonCustom\n      style={{ border: \"1px red\" }}\n      onClick={() => { setLoading(true); login(); }}\n    >\n      Sign in with Google\n    </GoogleButtonCustom>\n  );\n};\n\nexport default GoogleLoginButton;\n","import { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport React from \"react\";\n\nconst GoogleProvider = (props) => {\n  return (\n    <GoogleOAuthProvider clientId={props.clientId}>\n      {props.children}\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default GoogleProvider;\n","import React  from \"react\";\n\nconst LogoutButton = ({ setLogged }) => {\n\n  const logout = () => {\n    localStorage.removeItem('app_jwt');\n    setLogged(false);\n  };\n\n  return (\n    <button onClick={logout}> Logout </button>\n  )\n};\n\nexport default LogoutButton;\n","import styled from 'styled-components';\n\nexport const FooterCustom = styled.footer`\n  footer {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 60px; /* altura do rodapé */\n    // background-color: #f5f5f5;\n    background-color: red;\n  }\n`;\n","import GoogleLoginButton from \"./components/GoogleLoginButton\";\nimport GoogleProvider from \"./components/GoogleProvider\";\nimport LogoutButton from \"./components/LogoutButton\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FooterCustom } from \"./styles\";\n\nconst LoginOptions = ({ isLogged, setLogged, token, setToken, isLoading, setLoading }) => {\n  const [ copySuccess, setCopySuccess ] = useState(false);\n\n  const copyToClipboard = (e) => {\n    const textField = document.createElement('textarea');\n    textField.innerText = e.target.innerText;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n    setCopySuccess(true);\n  };\n\n  if( isLoading ) {\n    return (\n        <><br/><br/><br/><h1 style={{ 'text-align': 'center' }} aria-busy='true'></h1></>\n    );\n\n  }\n\n  if( isLogged ){\n    return (\n      <>\n        <h3>Logoado com sucesso:</h3>\n        <article onClick={ copyToClipboard }>{ token }</article>\n        <p style={{ 'text-align': 'center' }}><ins>{ copySuccess ? 'Texto copiado' : <br/> } </ins></p>\n        <LogoutButton setLogged={setLogged}/>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h3>Login:</h3>\n      <GoogleProvider clientId={process.env.REACT_APP_CLIENT_ID}>\n        <label>Login como aluno: </label>\n        <GoogleLoginButton successPath={'api/login/aluno'} setToken={setToken} setLogged={setLogged} setLoading={setLoading}/>\n        <label>Login como professor: </label>\n        <GoogleLoginButton successPath={'api/login/professor'} setToken={setToken} setLogged={setLogged} setLoading={setLoading}/>\n      </GoogleProvider>\n    </>\n  );\n\n}\n\nconst LoginPage = () => {\n  const [ token, setToken ] = useState(localStorage.getItem(\"app_jwt\"));\n  const [ isLogged, setLogged ] = useState(!!token);\n  const [ isLoading, setLoading ] = useState(false);\n\n  return (\n    <main className=\"container\">\n      <br/>\n      <LoginOptions\n        isLogged={isLogged} setLogged={setLogged}\n        isLoading={isLoading} setLoading={setLoading}\n        token={token} setToken={setToken}\n      />\n      <br/>\n      <FooterCustom>\n        <Link to=\"admin\">Entrar como administrador</Link> <br/>\n        <a href=\"#\">Veja o projeto no github</a>\n      </FooterCustom>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport './css/pico.min.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { AdminPage, LoginPage } from './pages'\n\nconst App = () => {\n  return (\n    <Router data-theme=\"dark\">\n      <Routes>\n        <Route path='/' element={<LoginPage/>} />\n        <Route path='/admin' element={<AdminPage/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container flex-center\">\n      <App/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}